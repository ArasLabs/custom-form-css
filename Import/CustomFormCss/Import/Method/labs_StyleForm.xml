<AML>
 <Item type="Method" id="E604744175D24C45846C5BDD97250A92" action="add">
  <comments>Modifies classes and attributes on form elements to override default styles</comments>
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[// Aras Labs
// Eli Donahue - 10/27/16
//
// Modify classes and attributes on form elements to override default styles 
// Includes helpful functions to reduce repeated code
// Requires a custom CSS to be defined on the form body tab and custom images
//
// Updated 4/26/17 - moved function definitions from script tags on fields to
//      the labs_StyleForm Form Event. Consolidates function definitions.

////////////////////// Configurable variables /////////////////////////////

    var imgRoot = '../customer/svg/';
    var searchBtn = imgRoot + 'search.svg';
    var dateBtn = imgRoot + 'calendar.svg';

////////////////////// Helpful functions /////////////////////////////

    // function to replace a class name for specified elements
    replaceClass = function (els, oldClass, newClass) {
        while (els.length > 0) {
            els[0].className = els[0].className.replace(new RegExp('(?:^|\\s)' +
                oldClass + '(?:\\s|$)'), newClass);
        }
    };

    // sets a specific attribute for all elements in a collection
    setAttributeOnAll = function (els, attrName, attrVal) {
        for (var i = 0; i < els.length; i++)
            els[i].setAttribute(attrName, attrVal);
    };

    // appends a value to an attribute for all elements in a collection
    // can be used to append class name
    appendAttributeOnAll = function (els, attrName, attrVal) {
        for (var i = 0; i < els.length; i++) {
            var curr = els[i].getAttribute(attrName);
            els[i].setAttribute(attrName, curr + ' ' + attrVal);
        }
    };

    // get element associated with an item property's "button"
    getItemFieldButton = function (field) {
        var itms = document.getElementsByClassName(field);
        var parentEl = itms[0].parentElement;
        return parentEl.getElementsByTagName("button");
    };

    // replace icon on an item property's "button"
    updateItemFieldIcon = function (field, icon) {
        var btn = getItemFieldButton(field);
        setAttributeOnAll(btn, 'src', icon);
        return btn;
    };

////////////////////// Override default field styles //////////////////////////

    // inline label style
    var labels = document.getElementsByClassName("sys_f_label");
    setAttributeOnAll(labels, 'style', '');
    appendAttributeOnAll(labels, 'class', 'my_label');
    
    // required in 11 SP12+ to style dropdown fields & item fields
    labels = document.getElementsByClassName("aras-field__label");
    setAttributeOnAll(labels, 'style', '');
    appendAttributeOnAll(labels, 'class', 'my_label');

    // default select style 
    var selects = document.getElementsByClassName('aras-filter-list__input');
    replaceClass(selects, 'aras-filter-list__input', 'my_select ');

    selects = document.getElementsByClassName('aras-dropdown-container');
    replaceClass(selects, 'aras-dropdown-container', ' my_select_div');
    
    // style dropdown and item field buttons
    var buttons = document.getElementsByClassName('aras-filter-list__button');
    appendAttributeOnAll(buttons, 'class', 'my_button');
    
    buttons = document.getElementsByClassName('aras-filter-list__button_ellipsis');
    appendAttributeOnAll(buttons, 'class', 'my_button');

    // default date select style with custom button icon and class
    var cals = document.getElementsByClassName("sys_f_input_image_calendar_ff");
    setAttributeOnAll(cals, 'src', dateBtn);
    replaceClass(cals, 'sys_f_input_image_calendar_ff', ' my_cal_btn_ff');

    // default item field styles (managed_by_id)
    var btn = updateItemFieldIcon('managed_by_id', searchBtn);
    appendAttributeOnAll(btn, 'class', 'my_search_btn');

    // default item field styles (owned_by_id)
    btn = updateItemFieldIcon('owned_by_id', searchBtn);
    appendAttributeOnAll(btn, 'class', 'my_search_btn');

////////////////////// Style Custom Fields ////////////////////////////////////

    // Apply custom style to the item_info field 
    style_ITEM_INFO_INTERNAL_SPAN = function () {
        // override default icon style
        var lg_icn = document.getElementById("large_icon_img");
        lg_icn.style = '';
        var tbl = document.getElementById("itemInfoTable");
        tbl.style.marginTop = "45px";

        // add element to display styled state
        var container = document.getElementById("ITEM_INFO_INTERNAL_SPAN");
        var stateLabel = document.createElement("span");
        stateLabel.className = "my_state";
        container.appendChild(stateLabel);

        // set value of new state element
        var stateValue = document.getElementById("itemProps$state");
        stateValue = stateValue.textContent;
        stateLabel.innerHTML = stateValue.toUpperCase();

        // style new state element color based on LC state
        if (stateValue == "Released")
            stateLabel.style.color = "red";
        if (stateValue == "Preliminary")
            stateLabel.style.color = "green";

        // hide default state property in table
        var stateRow = document.getElementById("state_row");
        stateRow.style.visibility = "hidden";
        stateRow.style.display = "none";

        // display classification as title
        var thisItem = document.thisItem;
        var classification = thisItem.getProperty("classification", "Part");
        var titleEl = document.getElementById("label_span");
        titleEl.innerHTML = classification;
    }

    // select custom icon based on context item's classification 
    chooseIcon = function () {
        var icn = imgRoot;

        // get classification, gets "none" if getProperty returns null
        var thisItem = document.thisItem;
        var classification = thisItem.getProperty("classification", "none");

        // get icon fields
        var defIcon = document.getElementById("large_icon_img");
        var myIcon = document.getElementById("myIcon");

        // choose file name
        switch (classification) {
            case "none":
                // choose part icon file
                icn = defIcon.getAttribute("src");
                break;
            case "Assembly":
                icn += "package.svg";
                break;
            case "Component":
                icn += "circuit-board.svg";
                break;
            case "Material":
                icn += "beaker.svg";
                break;
            case "Software":
                icn += "file-binary.svg";
                break;
        }

        // style custom icon
        myIcon.setAttribute("src", icn);
        myIcon.style.visibility = "visible";
        myIcon.style.display = "block";

        // hide default icon element
        defIcon.style.visibility = "hidden";
    }

////////////////////// End ///////////////////////////////////////////////]]></method_code>
  <method_type>JavaScript</method_type>
  <name>labs_StyleForm</name>
 </Item>
</AML>